name: CICD for Serverless Application
run-name: ${{ github.actor }} is doing CICD for serverless application

on:
  push:
    branches: [ main, "*" ]

  workflow_dispatch: 
    inputs:
      
      environment:
        description: 'Choose an enviroment to deploy'
        type: environment
        required: true
        default: 'staging'

jobs:
    development:
        name: Development
        runs-on: ubuntu-latest
        steps:
        - run: echo "The job is automatically triggered by a ${{ github.event_name }} event."

  
        runs-on: ubuntu-latest
        needs: development
        steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Run installation of dependencies commands
        run: npm install

  
        runs-on: ubuntu-latest
        steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Run installation of dependencies commands
        run: npm install
      - name: Run unit testing command
        run: npm test
  
        runs-on: ubuntu-latest
        steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Run installation of dependencies commands
        run: npm install
      - name: Run audit
        run: npm audit

      - name: Zip artifact for deployment
        run: |
            cd dist
            zip release.zip ./* -r

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: web-app            
          path: ./dist/release.zip  

    ReuseableMatrixJobForDeployment:
      needs: development
      strategy:
        fail-fast: true
        matrix:
          target: [Staging, Production ]
      uses: ./.github/workflows/deployment.yml
      with:
        target-env: ${{ matrix.target }}
      secrets: inherit

#deploy:
#    runs-on: ubuntu-latest
#    steps:
#    - uses: actions/checkout@v3
#    - name: Use Node.js ${{ matrix.node-version }}
#      uses: actions/setup-node@v3
#      with:
#        node-version: ${{ matrix.node-version }}
#    - run: npm ci
#    - name: serverless deploy
#      uses: serverless/github-action@v3.2
#      with:
#        args: deploy
#      env:
#        AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
#        AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}